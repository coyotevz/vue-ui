/**
 * Based on mdl grid system
 */

@import "variables";

.ui-grid {
  display: flex;
  flex-flow: row wrap;
  margin: 0 auto 0 auto;
  align-items: stretch;

  &.no-spacing {
    padding: 0;

    > .ui-cell {
      margin: 0;
    }
  }
}

.ui-cell {
  box-sizing: border-box;

  &.top {
    align-self: flex-start;
  }

  &.middle {
    align-self: flex-center;
  }

  &.bottom {
    align-self: flex-end;
  }

  &.stretch {
    align-self: stretch;
  }

  // Define order override classes
  @for $i from 1 through $grid-max-columns {
    &.order-#{$i} {
      order: $i;
    }
  }
}

// Mixins for with calculation
@mixin partial-size($size, $columns, $gutter) {
  width: calc(#{(($size / $columns) * 100)+"%"} - #{$gutter});

  .ui-grid.no-spacing > & {
    width: #{(($size / $columns) * 100)+"%"};
  }
}

@mixin full-size($gutter) {
  @include partial-size(1, 1, $gutter);
}

@mixin offset-size($size, $columns, $gutter) {
  margin-left: calc(#{(($size / $columns) * 100)+"%"} + #{$gutter / 2});

  .ui-grid.no-spacing > & {
    margin-left: #{(($size / $columns) * 100)+"%"};
  }
}

/// Phone
@media (max-width: $grid-tablet-breakpoint - 1) {
  .ui-grid {
    padding: $grid-phone-margin - ($grid-phone-gutter / 2);
  }

  .ui-cell {
    margin: $grid-phone-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-phone-columns,
    $grid-phone-gutter);

    &.hide-phone {
      display: none !important;
    }

    // Define order override clases.
    @for $i from 1 through $grid-max-columns {
      &.order-#{$i}-phone {
        order: $i;
      }
    }

    // Define partial size for columnNumber < totalColumns
    @for $i from 1 through ($grid-phone-columns - 1) {
      &.ui-#{$i}-col,
      &.ui-#{$i}-col-phone {
        @include partial-size($i, $grid-phone-columns, $grid-phone-gutter);
      }
    }

    // Define 100% for everything else.
    @for $i from $grid-phone-columns through $grid-desktop-columns {
      &.ui-#{$i}-col,
      &.ui-#{$i}-col-phone {
        @include full-size($grid-phone-gutter);
      }
    }

    // Define valid phone offsets.
    @for $i from 1 through ($grid-phone-columns - 1) {
      &.ui-#{$i}-offset,
      &.ui-#{$i}-offset-phone {
        @include offset-size($i, $grid-phone-columns, $grid-phone-gutter);
      }
    }
  }
}

// Tablet
@media (min-width: $grid-tablet-breakpoint) and (max-width: $grid-desktop-breakpoint - 1) {
  .ui-grid {
    padding: $grid-tablet-margin - ($grid-tablet-gutter / 2);
  }

  .ui-cell {
    margin: $grid-tablet-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-tablet-columns,
    $grid-tablet-gutter);

    &.hide-tablet {
      display: none !important;
    }

    // Define order override clases.
    @for $i from 1 through $grid-max-columns {
      &.order-#{$i}-tablet {
        order: $i;
      }
    }

    // Define partial size for columnNumber < totalColumns
    @for $i from 1 through ($grid-tablet-columns - 1) {
      &.ui-#{$i}-col,
      &.ui-#{$i}-col-tablet {
        @include partial-size($i, $grid-tablet-columns, $grid-tablet-gutter);
      }
    }

    // Define 100% for everything else.
    @for $i from $grid-tablet-columns through $grid-desktop-columns {
      &.ui-#{$i}-col,
      &.ui-#{$i}-col-tablet {
        @include full-size($grid-tablet-gutter);
      }
    }

    // Define valid tablet offsets.
    @for $i from 1 through ($grid-tablet-columns - 1) {
      &.ui-#{$i}-offset,
      &.ui-#{$i}-offset-tablet {
        @include offset-size($i, $grid-tablet-columns, $grid-tablet-gutter);
      }
    }
  }
}

// Desktop
@media (min-width: $grid-desktop-breakpoint) {
  .ui-grid {
    padding: $grid-desktop-margin - ($grid-desktop-gutter / 2);
  }

  .ui-cell {
    margin: $grid-desktop-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-desktop-columns,
    $grid-desktop-gutter);

    &.hide-desktop {
      display: none !important;
    }

    // Define order override clases.
    @for $i from 1 through $grid-max-columns {
      &.order-#{$i}-desktop {
        order: $i;
      }
    }

    // Define partial size for all number of columns
    @for $i from 1 through $grid-desktop-columns {
      &.ui-#{$i}-col,
      &.ui-#{$i}-col-desktop {
        @include partial-size($i, $grid-desktop-columns, $grid-desktop-gutter);
      }
    }

    // Define valid desktop offsets.
    @for $i from 1 through ($grid-desktop-columns - 1) {
      &.ui-#{$i}-offset,
      &.ui-#{$i}-offset-desktop {
        @include offset-size($i, $grid-desktop-columns, $grid-desktop-gutter);
      }
    }
  }
}
